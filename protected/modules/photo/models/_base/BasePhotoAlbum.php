<?php

/**
* This is the model base class for the table "photo_album".
* DO NOT MODIFY THIS FILE! It is automatically generated by giix.
* If any changes are necessary, you must set or override the required
* property or method in class "PhotoAlbum".
*
* Columns in table "photo_album" available as properties of the model,
* and there are no model relations.
*
* @property integer $id
* @property integer $uid
* @property string $name
* @property string $desc
* @property string $create_time
* @property string $update_time
* @property string $cover_uri
* @property integer $mbr_count
* @property integer $views
* @property integer $status
* @property string $is_hot
* @property integer $privacy
* @property string $privacy_data
*
*/
abstract class BasePhotoAlbum extends YsActiveRecord {

public static function model($className=__CLASS__) {
return parent::model($className);
}

public function tableName() {
return 'photo_album';
}

public static function representingColumn() {
return 'name';
}

public function rules() {
return array(
array('name', 'required'),
array('uid, mbr_count, views, status, privacy', 'numerical', 'integerOnly'=>true),
array('name', 'length', 'max'=>60),
array('desc, cover_uri', 'length', 'max'=>255),
array('create_time, update_time', 'length', 'max'=>11),
array('is_hot', 'length', 'max'=>1),
array('privacy_data', 'safe'),
array('uid, desc, create_time, update_time, cover_uri, mbr_count, views, status, is_hot, privacy, privacy_data', 'default', 'setOnEmpty' => true, 'value' => null),
array('id, uid, name, desc, create_time, update_time, cover_uri, mbr_count, views, status, is_hot, privacy, privacy_data', 'safe', 'on'=>'search'),
);
}

public function relations() {
return array(
);
}

public function pivotModels() {
return array(
);
}

public function attributeLabels() {
return array(
'id' => Yii::t('photo_album', 'id'),
'uid' => Yii::t('photo_album', 'uid'),
'name' => Yii::t('photo_album', 'name'),
'desc' => Yii::t('photo_album', 'desc'),
'create_time' => Yii::t('photo_album', 'create_time'),
'update_time' => Yii::t('photo_album', 'update_time'),
'cover_uri' => Yii::t('photo_album', 'cover_uri'),
'mbr_count' => Yii::t('photo_album', 'mbr_count'),
'views' => Yii::t('photo_album', 'views'),
'status' => Yii::t('photo_album', 'status'),
'is_hot' => Yii::t('photo_album', 'is_hot'),
'privacy' => Yii::t('photo_album', 'privacy'),
'privacy_data' => Yii::t('photo_album', 'privacy_data'),
);
}

public function search() {
$criteria = new CDbCriteria;

$criteria->compare('id', $this->id);
$criteria->compare('uid', $this->uid);
$criteria->compare('name', $this->name, true);
$criteria->compare('desc', $this->desc, true);
$criteria->compare('create_time', $this->create_time, true);
$criteria->compare('update_time', $this->update_time, true);
$criteria->compare('cover_uri', $this->cover_uri, true);
$criteria->compare('mbr_count', $this->mbr_count);
$criteria->compare('views', $this->views);
$criteria->compare('status', $this->status);
$criteria->compare('is_hot', $this->is_hot, true);
$criteria->compare('privacy', $this->privacy);
$criteria->compare('privacy_data', $this->privacy_data, true);

return new CActiveDataProvider($this, array(
'criteria' => $criteria,
));
}
}