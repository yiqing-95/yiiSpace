<?php

/**
* This is the model base class for the table "photo".
* DO NOT MODIFY THIS FILE! It is automatically generated by giix.
* If any changes are necessary, you must set or override the required
* property or method in class "Photo".
*
* Columns in table "photo" available as properties of the model,
* and there are no model relations.
*
* @property string $id
* @property string $uid
* @property integer $album_id
* @property string $title
* @property string $desc
* @property string $path
* @property string $orig_path
* @property string $ext
* @property string $size
* @property string $tags
* @property integer $create_time
* @property integer $views
* @property double $rate
* @property integer $rate_count
* @property integer $cmt_count
* @property integer $is_featured
* @property string $status
* @property string $hash
* @property string $categories
*
*/
abstract class BasePhoto extends YsActiveRecord {

public static function model($className=__CLASS__) {
return parent::model($className);
}

public function tableName() {
return 'photo';
}

public static function representingColumn() {
return 'desc';
}

public function rules() {
return array(
array('uid,album_id', 'required'),
array('album_id, create_time, views, rate_count, cmt_count, is_featured', 'numerical', 'integerOnly'=>true),
array('rate', 'numerical'),
array('uid, size', 'length', 'max'=>10),
array('title, path, orig_path, tags', 'length', 'max'=>255),
array('ext', 'length', 'max'=>4),
array('status', 'length', 'max'=>11),
array('hash', 'length', 'max'=>32),
array('uid, album_id, title, path, orig_path, ext, size, tags, create_time, views, rate, rate_count, cmt_count, is_featured, status, hash', 'default', 'setOnEmpty' => true, 'value' => null),
array('id, uid, album_id, title, desc, path, orig_path, ext, size, tags, create_time, views, rate, rate_count, cmt_count, is_featured, status, hash, categories', 'safe', 'on'=>'search'),
);
}

public function relations() {
return array(
);
}

public function pivotModels() {
return array(
);
}

public function attributeLabels() {
return array(
'id' => Yii::t('photo', 'id'),
'uid' => Yii::t('photo', 'uid'),
'album_id' => Yii::t('photo', 'album_id'),
'title' => Yii::t('photo', 'title'),
'desc' => Yii::t('photo', 'desc'),
'path' => Yii::t('photo', 'path'),
'orig_path' => Yii::t('photo', 'orig_path'),
'ext' => Yii::t('photo', 'ext'),
'size' => Yii::t('photo', 'size'),
'tags' => Yii::t('photo', 'tags'),
'create_time' => Yii::t('photo', 'create_time'),
'views' => Yii::t('photo', 'views'),
'rate' => Yii::t('photo', 'rate'),
'rate_count' => Yii::t('photo', 'rate_count'),
'cmt_count' => Yii::t('photo', 'cmt_count'),
'is_featured' => Yii::t('photo', 'is_featured'),
'status' => Yii::t('photo', 'status'),
'hash' => Yii::t('photo', 'hash'),
'categories' => Yii::t('photo', 'categories'),
);
}

public function search() {
$criteria = new CDbCriteria;

$criteria->compare('id', $this->id, true);
$criteria->compare('uid', $this->uid, true);
$criteria->compare('album_id', $this->album_id);
$criteria->compare('title', $this->title, true);
$criteria->compare('desc', $this->desc, true);
$criteria->compare('path', $this->path, true);
$criteria->compare('orig_path', $this->orig_path, true);
$criteria->compare('ext', $this->ext, true);
$criteria->compare('size', $this->size, true);
$criteria->compare('tags', $this->tags, true);
$criteria->compare('create_time', $this->create_time);
$criteria->compare('views', $this->views);
$criteria->compare('rate', $this->rate);
$criteria->compare('rate_count', $this->rate_count);
$criteria->compare('cmt_count', $this->cmt_count);
$criteria->compare('is_featured', $this->is_featured);
$criteria->compare('status', $this->status, true);
$criteria->compare('hash', $this->hash, true);
$criteria->compare('categories', $this->categories, true);

return new CActiveDataProvider($this, array(
'criteria' => $criteria,
));
}
}