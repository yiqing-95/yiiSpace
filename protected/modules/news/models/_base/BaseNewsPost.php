<?php

/**
* This is the model base class for the table "news_post".
* DO NOT MODIFY THIS FILE! It is automatically generated by giix.
* If any changes are necessary, you must set or override the required
* property or method in class "NewsPost".
*
* Columns in table "news_post" available as properties of the model,
* and there are no model relations.
*
* @property string $nid
* @property string $content
* @property string $keywords
* @property string $meta_title
* @property string $meta_description
* @property string $meta_keywords
*
*/
abstract class BaseNewsPost extends GxActiveRecord {

public static function model($className=__CLASS__) {
return parent::model($className);
}

public function tableName() {
return 'news_post';
}

public static function representingColumn() {
return 'content';
}

public function rules() {
return array(
array('content', 'required'),
array('nid', 'length', 'max'=>10),
array('keywords', 'length', 'max'=>100),
array('meta_title, meta_description, meta_keywords', 'length', 'max'=>255),
array('keywords, meta_title, meta_description, meta_keywords', 'default', 'setOnEmpty' => true, 'value' => null),
array('nid, content, keywords, meta_title, meta_description, meta_keywords', 'safe', 'on'=>'search'),
);
}

public function relations() {
return array(
);
}

public function pivotModels() {
return array(
);
}

public function attributeLabels() {
return array(
'nid' => Yii::t('news_post', 'nid'),
'content' => Yii::t('news_post', 'content'),
'keywords' => Yii::t('news_post', 'keywords'),
'meta_title' => Yii::t('news_post', 'meta_title'),
'meta_description' => Yii::t('news_post', 'meta_description'),
'meta_keywords' => Yii::t('news_post', 'meta_keywords'),
);
}

public function search() {
$criteria = new CDbCriteria;

$criteria->compare('nid', $this->nid, true);
$criteria->compare('content', $this->content, true);
$criteria->compare('keywords', $this->keywords, true);
$criteria->compare('meta_title', $this->meta_title, true);
$criteria->compare('meta_description', $this->meta_description, true);
$criteria->compare('meta_keywords', $this->meta_keywords, true);

return new CActiveDataProvider($this, array(
'criteria' => $criteria,
));
}
}