<?php

/**
* This is the model base class for the table "sys_object_view".
* DO NOT MODIFY THIS FILE! It is automatically generated by giix.
* If any changes are necessary, you must set or override the required
* property or method in class "SysObjectView".
*
* Columns in table "sys_object_view" available as properties of the model,
* and there are no model relations.
*
* @property integer $id
* @property string $name
* @property string $table_track
* @property integer $period
* @property string $trigger_table
* @property string $trigger_field_id
* @property string $trigger_field_views
* @property integer $enable
*
*/
abstract class BaseSysObjectView extends YsActiveRecord {

public static function model($className=__CLASS__) {
return parent::model($className);
}

public function tableName() {
return 'sys_object_view';
}

public static function representingColumn() {
return 'name';
}

public function rules() {
return array(
array('name, table_track, trigger_table', 'required'),
array('period, enable', 'numerical', 'integerOnly'=>true),
array('name, table_track, trigger_table, trigger_field_id, trigger_field_views', 'length', 'max'=>32),
array('period, trigger_field_id, trigger_field_views, enable', 'default', 'setOnEmpty' => true, 'value' => null),
array('id, name, table_track, period, trigger_table, trigger_field_id, trigger_field_views, enable', 'safe', 'on'=>'search'),
);
}

public function relations() {
return array(
);
}

public function pivotModels() {
return array(
);
}

public function attributeLabels() {
return array(
'id' => Yii::t('sys_object_view', 'id'),
'name' => Yii::t('sys_object_view', 'name'),
'table_track' => Yii::t('sys_object_view', 'table_track'),
'period' => Yii::t('sys_object_view', 'period'),
'trigger_table' => Yii::t('sys_object_view', 'trigger_table'),
'trigger_field_id' => Yii::t('sys_object_view', 'trigger_field_id'),
'trigger_field_views' => Yii::t('sys_object_view', 'trigger_field_views'),
'enable' => Yii::t('sys_object_view', 'enable'),
);
}

public function search() {
$criteria = new CDbCriteria;

$criteria->compare('id', $this->id);
$criteria->compare('name', $this->name, true);
$criteria->compare('table_track', $this->table_track, true);
$criteria->compare('period', $this->period);
$criteria->compare('trigger_table', $this->trigger_table, true);
$criteria->compare('trigger_field_id', $this->trigger_field_id, true);
$criteria->compare('trigger_field_views', $this->trigger_field_views, true);
$criteria->compare('enable', $this->enable);

return new CActiveDataProvider($this, array(
'criteria' => $criteria,
));
}
}